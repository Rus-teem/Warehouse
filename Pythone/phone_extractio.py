import re, pyperclip

# re - для работы с регулярными выражениями.
# pyperclip - для работы с функциями копирования и вставки строк.

phone = re.compile(
    r"""(
(\s|-|\.)*
(\d)
(\s|-|\.)?
(\d{3}|\(\d{3}\))
(\s|-|\.)?
(\d{3})
(\s|-|\.)?
(\d{4}|\d{2})
(\s|-|\.)?
(\d{2})?
(\s*(доб|доб.)\s*(\d{2,5}))?
)""",
    re.VERBOSE,
)

# r перед кавычками означает, что последующая строка будет необработанной (сырой) и всякое там экранирование будет игнорироваться.
# (\s|-|\.)* - первый символ искомой строки может содержать пробельный символ (\s), или (|) дефис (-) или (|) любой символ кроме символа новой строки (\.). А * после скобок означает, что таких символов может быть нулевое или произвольное количество. Посмотрите эту подсказку с полным перечнем элементов регулярных выражений. Такая комбинация необходима, так как на многих сайтах перед номером телефона могут быть пробелы, знаки, да и просто номер может начинаться со знака '+'.
# (\d) - искомый блок должен содержать одиночный цифровой символ.
# (\s|-|\.)? - блок аналогичен первому, так как после первой восьмерки часто ставят дефисы или пробелы, но теперь в одном или вообще нулевом экземпляре, поэтому после скобок стоит знак ? (см. подсказку).
# (\d{3}|\(\d{3}\)) - искомый блок символов может содержать три цифровых символа или три цифровых символа в скобках.
# (\s|-|\.)? - смотри пункт три.
# (\d{3}) - блок должен содержать три цифровых символа.
# (\s|-|\.)? - смотри пункт три.
# (\d{4}|\d{2}) - блок должен содержать четыре или два цифровых символа.
# (\s|-|\.)? - смотри пункт три.
# (\d{2})? - блок должен содержать два цифровых символа в нулевом или одном экземпляре. Т.е. этот блок необязателен, если последним цифровым блоком были четыре цифры (+7 (831) 467-1001).
# (\s*(доб|доб.)\s*(\d{2,5}))? - а это необязательный добавочный номер. Он может состоять из произвольного количества пробелов, за которыми следует буквенное обозначение 'доб' или 'доб.' и сам номер, содержащий от двух до пяти цифр.

email = re.compile(
    r"""(
[a-zA-Z0-9._%+-]+
@
[a-zA-Z0-9.-]+
(\.[a-zA-Z]{2,4})
)""",
    re.VERBOSE,
)

text = str(pyperclip.paste())
list = []

for groups in phone.findall(text):
    phoneNums = "-".join([groups[2], groups[4], groups[6], groups[8], groups[10]])
    if groups[11] != "":
        phoneNums += " x" + groups[11]
    list.append(phoneNums)

for groups in email.findall(text):
    list.append(groups[0])

if len(list) > 0:
    pyperclip.copy("\n".join(list))
    print("Скоипировано в буфер обмена.")
    print("\n".join(list))
else:
    print("Телефонные номера и адреса электронной почты не обнаружены.")
